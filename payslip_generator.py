import pandas as pd
from fpdf import FPDF
import yagmail
import os

# === CONFIGURATION ===
GMAIL_USER = os.getenv("GMAIL_USER", "Ttytem@gmail.com")
GMAIL_PASS = os.getenv("GMAIL_PASS", "jqxhjgzrbxhuzrwv")

if not GMAIL_USER or not GMAIL_PASS:
    print("‚ùå Gmail credentials not set.")
    exit()
else:
    print("‚úÖ Gmail credentials loaded successfully.")

# === STEP 1: Read employee data ===
def read_employee_data(file_path):
    try:
        df = pd.read_excel(file_path)
        df.columns = df.columns.str.strip()
        print("‚úî Employee data loaded.")
        return df
    except FileNotFoundError:
        print("‚ùå File not found.")
        exit()
    except Exception as e:
        print(f"‚ùå Error: {e}")
        exit()

# === STEP 2: Salary Calculation ===
def calculate_net_salary(basic_salary, allowances, deductions):
    return basic_salary + allowances - deductions

# === STEP 3: Aesthetic PDF Payslip ===
def generate_payslip(employee_id, name, basic_salary, allowances, deductions, net_salary):
    pdf = FPDF()
    pdf.add_page()

    # Header
    pdf.set_fill_color(255, 165, 0)
    pdf.set_text_color(255, 255, 255)
    pdf.set_font("Arial", 'B', 20)
    pdf.cell(0, 15, f"  Monthly Payslip", ln=True, fill=True)

    # Sub-header
    pdf.set_fill_color(245, 245, 245)
    pdf.ln(5)
    pdf.set_font("Arial", 'B', 14)
    pdf.set_text_color(80, 80, 80)
    pdf.cell(0, 10, f"Employee: {name} (ID: {employee_id})", ln=True)

    pdf.ln(3)

    # Salary breakdown
    def draw_info(label, value):
        pdf.set_font("Arial", 'B', 12)
        pdf.set_text_color(255, 165, 0)
        pdf.cell(50, 10, label)
        pdf.set_font("Arial", '', 12)
        pdf.set_text_color(0, 0, 0)
        pdf.cell(0, 10, f"{value}", ln=True)

    pdf.set_fill_color(255, 250, 240)
    pdf.set_draw_color(255, 165, 0)
    pdf.set_line_width(0.3)
    pdf.rect(10, pdf.get_y(), 190, 60)

    pdf.ln(2)
    draw_info("Basic Salary:", f"${basic_salary:.2f}")
    draw_info("Allowances:", f"${allowances:.2f}")
    draw_info("Deductions:", f"${deductions:.2f}")

    # Net Salary Highlight
    pdf.ln(5)
    pdf.set_fill_color(255, 215, 160)
    pdf.set_text_color(0, 0, 0)
    pdf.set_font("Arial", 'B', 14)
    pdf.cell(0, 12, f"  Net Salary: ${net_salary:.2f}", ln=True, fill=True)

    # Footer
    pdf.set_y(-30)
    pdf.set_font("Arial", 'I', 10)
    pdf.set_text_color(100, 100, 100)
    pdf.cell(0, 10, "Generated by Payslip Generator", ln=True, align="C")

    os.makedirs("payslips", exist_ok=True)
    file_path = f"payslips/{employee_id}.pdf"
    pdf.output(file_path)
    return file_path

# === STEP 4: Email Payslip ===
def send_email(recipient_email, file_path):
    try:
        yag = yagmail.SMTP(GMAIL_USER, GMAIL_PASS)
        subject = "Your Payslip for This Month"
        body = "Hello,\n\nPlease find your payslip attached. Let us know if you have any questions.\n\nRegards,\nHR Department"
        yag.send(to=recipient_email, subject=subject, contents=body, attachments=file_path)
        print(f"üìß Payslip sent to {recipient_email}")
    except Exception as e:
        print(f"‚ùå Email failed for {recipient_email}: {e}")

# === STEP 5: Main ===
def main():
    excel_file = (r"C:\Users\uncommonStudent\Desktop\hello world\New folder\employees.xlsx")
    employees = read_employee_data(excel_file)

    for index, row in employees.iterrows():
        employee_id = row['Employee ID']
        name = row['Name']
        email = row['Email']
        basic_salary = row['Basic Salary']
        allowances = row['Allowances']
        deductions = row['Deductions']

        net_salary = calculate_net_salary(basic_salary, allowances, deductions)
        payslip_path = generate_payslip(employee_id, name, basic_salary, allowances, deductions, net_salary)
        send_email(email, payslip_path)

if __name__ == "__main__":
    main()
